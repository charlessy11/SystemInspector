<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="util_8h" kind="file" language="C++">
    <compoundname>util.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="display_8c" local="yes">display.c</includedby>
    <includedby refid="procfs_8c" local="yes">procfs.c</includedby>
    <includedby refid="util_8c" local="yes">util.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/types.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1ad3a2e79e324c07c49615f5789f0bef73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int open_path</definition>
        <argsstring>(char *proc_dir, char *path)</argsstring>
        <name>open_path</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens specified path</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the location of procfs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the file</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>file directory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="16" column="5" bodyfile="util.c" bodystart="15" bodyend="34" declfile="util.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a04380a46a51cecbff707bf9199012de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t one_lineread</definition>
        <argsstring>(int fd, char *buf, size_t sz, char *delim)</argsstring>
        <name>one_lineread</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads one line of file</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>stores the line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>the size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delim</parametername>
</parameternamelist>
<parameterdescription>
<para>the deliminator</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>amount of bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="28" column="9" bodyfile="util.c" bodystart="36" bodyend="46" declfile="util.h" declline="28" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a85946f927132d967d9f348e19b252c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t lineread</definition>
        <argsstring>(int fd, char *buf, size_t sz)</argsstring>
        <name>lineread</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads a file line by line</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>stores the line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>the size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>amount of bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="39" column="9" bodyfile="util.c" bodystart="48" bodyend="72" declfile="util.h" declline="39" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a36cc4e6b1ce708ed7492ae0979b10bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* next_token</definition>
        <argsstring>(char **str_ptr, const char *delim)</argsstring>
        <name>next_token</name>
        <param>
          <type>char **</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tokenize string</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>point of tokenization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delim</parametername>
</parameternamelist>
<parameterdescription>
<para>deliminator</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>token </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="49" column="6" bodyfile="util.c" bodystart="74" bodyend="110" declfile="util.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a75fa1b7f896c1bc05d855ce9d9ceeffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_percbar</definition>
        <argsstring>(char *buf, double frac)</argsstring>
        <name>draw_percbar</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draws percentage bar</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>stores information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frac</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of usage </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="58" column="6" bodyfile="util.c" bodystart="112" bodyend="139" declfile="util.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa9ecc65e735e295dc53f92cfefca6d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uid_to_uname</definition>
        <argsstring>(char *name_buf, uid_t uid)</argsstring>
        <name>uid_to_uname</name>
        <param>
          <type>char *</type>
          <declname>name_buf</declname>
        </param>
        <param>
          <type>uid_t</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps ID numbers (UID) associated with running processes to corresponding username</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>stores names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>the user identification </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.h" line="67" column="6" bodyfile="util.c" bodystart="141" bodyend="171" declfile="util.h" declline="67" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_UTIL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UTIL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>open_path(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">ssize_t<sp/>one_lineread(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*delim);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ssize_t<sp/>lineread(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*next_token(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**str_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*delim);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw_percbar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uid_to_uname(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name_buf,<sp/>uid_t<sp/>uid);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="util.h"/>
  </compounddef>
</doxygen>
